CREATE OR REPLACE PROCEDURE GET_DATE IS
BEGIN
DBMS_OUTPUT.PUT_LINE('CURRENT TIME: '||TO_CHAR(SYSDATE,'DD.MM.YYYY HH24:MI:SS'));
END GET_DATE;
/

BEGIN
    GET_DATE;
END;
/

CREATE TABLE JOBS AS
SELECT *
FROM HR.JOBS;

SELECT JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY
FROM ANDREW.JOBS;

CREATE OR REPLACE PROCEDURE ADD_NEW_JOB(
        P_JOB_ID IN VARCHAR2, 
        P_JOB_TITLE IN VARCHAR2, 
        P_MIN_SALARY IN NUMBER, 
        P_MAX_SALARY IN NUMBER DEFAULT NULL,
        PO_MESSAGE OUT VARCHAR2) IS
    V_MAX_SALARY ANDREW.JOBS.MAX_SALARY%TYPE;
BEGIN
    IF P_MAX_SALARY IS NULL THEN
        V_MAX_SALARY:=P_MIN_SALARY*1.5;
    ELSE 
        V_MAX_SALARY:=P_MAX_SALARY;
    END IF;
    IF (P_MIN SALARY<2000 OR P_MAX_SALARY<2000) THEN
        PO_MESSAGE:='SOME SALARY IS LESS THEN 2000';
    ELSE 
        INSERT INTO ANDREW.JOBS(JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
        VALUES(P_JOB_ID, P_JOB_TITLE, P_MIN_SALARY, V_MAX_SALARY);
        --COMMIT;
        PO_MESSAGE:='JOB '|| P_JOB_ID ||' ADDED';
    END IF
END ADD_NEW_JOB;
/

DECLARE
V_MESSAGE VARCHAR(100);
BEGIN
    ADD_NEW_JOB(
        P_JOB_ID => 'IT_QA', 
        P_JOB_TITLE => 'QA ENGINEER', 
        P_MIN_SALARY => 5000, 
        P_MAX_SALARY => 10000,
        PO_MESSAGE => V_MESSAGE);
    DBMS_OUTPUT.PUT_LINE(V_MESSAGE);
END;
/